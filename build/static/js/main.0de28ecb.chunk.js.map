{"version":3,"sources":["utils/utils.ts","constants/apiPaths.ts","store/cartSlice.ts","components/AddProductToCart/AddProductToCart.tsx","components/pages/PageProducts/components/Products.tsx","components/pages/PageProducts/PageProducts.tsx","components/MainLayout/components/Cart.tsx","components/MainLayout/components/Header.tsx","components/MainLayout/MainLayout.tsx","models/Product.ts","components/PaperLayout/PaperLayout.tsx","components/pages/PageProductForm/PageProductForm.tsx","components/CartItems/CartItems.tsx","components/pages/PageCart/components/ReviewCart.tsx","components/pages/PageCart/components/ReviewOrder.tsx","models/Order.ts","components/pages/PageCart/PageCart.tsx","components/pages/PageOrders/components/Orders.tsx","components/pages/PageOrders/PageOrders.tsx","constants/order.tsx","components/pages/PageOrder/PageOrder.tsx","components/pages/admin/PageProductImport/components/ProductsTable.tsx","components/pages/admin/PageProductImport/components/CSVFileImport.tsx","components/pages/admin/PageProductImport/PageProductImport.tsx","components/App/App.tsx","store/counterSlice.ts","store/store.ts","serviceWorker.ts","index.tsx"],"names":["priceFormatter","Intl","NumberFormat","style","currency","formatAsPrice","price","format","API_PATHS","product","order","import","bff","cart","cartSlice","createSlice","name","initialState","items","reducers","updateFromApi","state","payload","addToCart","action","existingItem","find","i","id","count","push","removeFromCart","filter","clearCart","dispatch","getState","actions","axios","put","headers","Authorization","localStorage","getItem","selectCartItems","AddProductToCart","useDispatch","cartItem","useSelector","IconButton","onClick","color","Typography","align","useStyles","makeStyles","theme","card","height","display","flexDirection","cardMedia","paddingTop","cardContent","flexGrow","footer","backgroundColor","palette","background","paper","padding","spacing","Products","classes","useState","products","setProducts","useEffect","productList","Grid","container","map","index","item","key","xs","sm","md","Card","className","CardMedia","image","title","CardContent","gutterBottom","variant","component","CardActions","content","PageProducts","Cart","get","then","data","badgeContent","length","undefined","aria-label","Link","to","Badge","createStyles","root","menuButton","marginRight","homeLink","textDecoration","Header","React","anchorEl","setAnchorEl","open","Boolean","handleClose","AppBar","position","Toolbar","aria-controls","aria-haspopup","event","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","Copyright","href","Date","getFullYear","paddingBottom","MainLayout","children","Container","maxWidth","ProductSchema","Yup","shape","required","description","layout","width","marginLeft","breakpoints","up","marginTop","marginBottom","PaperLayout","Paper","Form","props","dirty","isSubmitting","isValid","handleSubmit","onSubmit","autoComplete","TextField","label","fullWidth","multiline","justify","Button","type","disabled","emptyValues","cast","PageProductForm","history","useHistory","useParams","setProduct","isLoading","setIsLoading","res","initialValues","validationSchema","values","formattedValues","productToSave","listItem","total","fontWeight","CartItems","isEditable","totalPrice","reduce","List","disablePadding","ListItem","ListItemText","primary","secondary","ReviewCart","cartItems","Fragment","ReviewOrder","address","firstName","lastName","direction","comment","AddressSchema","default","defined","OrderItemSchema","productId","integer","positive","OrderSchema","of","status","stepper","buttons","justifyContent","button","steps","initialAddressValues","CartIsEmpty","Success","PageCart","activeStep","setActiveStep","isCartEmpty","setAddress","isFormValid","setIsFormValid","Stepper","Step","StepLabel","enableReinitialize","isInitialValid","Orders","orders","setOrders","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","statusHistory","toUpperCase","size","delete","PageOrders","ORDER_STATUS","ORDER_STATUS_FLOW","helperText","select","value","PageOrder","setOrder","setCartItems","promises","Promise","all","p","lastStatusItem","statusHistoryItem","timestamp","toString","ProductsTable","CSVFileImport","url","file","setFile","uploadFile","e","method","params","encodeURIComponent","response","console","log","fetch","body","result","onChange","files","target","dataTransfer","PageProductImport","Box","alignItems","App","path","exact","counterSlice","increment","decrement","incrementByAmount","store","configureStore","reducer","counter","counterReducer","cartReducer","window","location","hostname","match","interceptors","use","error","alert","reject","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.0de28ecb.chunk.js","sourcesContent":["const priceFormatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n});\n\nexport const formatAsPrice = (price: number) => priceFormatter.format(price);","\nconst API_PATHS = {\n  product: 'https://.execute-api.eu-west-1.amazonaws.com/dev',\n  order: 'https://.execute-api.eu-west-1.amazonaws.com/dev',\n  import: 'https://.execute-api.eu-west-1.amazonaws.com/dev',\n  bff: 'https://.execute-api.eu-west-1.amazonaws.com/dev',\n  cart: 'https://.execute-api.eu-west-1.amazonaws.com/dev',\n};\n\nexport default API_PATHS;\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {RootState} from 'store/store';\nimport {Product} from \"models/Product\";\nimport {CartItem} from \"models/CartItem\";\nimport API_PATHS from \"../constants/apiPaths\";\nimport axios from 'axios';\n\ninterface CartState {\n  items: CartItem[]\n}\n\nconst initialState: CartState = {\n  items: [],\n};\n\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    updateFromApi: (state, { payload: { items } }: PayloadAction<CartState>) => {\n      return {\n        items: [\n            ...items,\n        ],\n      }\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    addToCart: (state, action: PayloadAction<Product>) => {\n      const {items} = state;\n      const {payload: product} = action;\n      const existingItem = items.find(i => i.product.id === product.id);\n      if (existingItem) {\n        existingItem.count++;\n        return;\n      }\n      items.push({product, count: 1});\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    removeFromCart: (state, action: PayloadAction<Product>) => {\n      let {items} = state;\n      const {payload: product} = action;\n      const existingItem = items.find(i => i.product.id === product.id);\n      if (!existingItem) return;\n      if (existingItem.count > 1) {\n        existingItem.count--;\n        return;\n      }\n      state.items = items.filter(i => i.product.id !== product.id);\n    },\n    clearCart: (state) => {\n      state.items = [];\n    }\n  },\n});\n\nexport const addToCart = (product: Product) => async (dispatch: any, getState: any) => {\n  dispatch(cartSlice.actions.addToCart(product));\n  const { cart: { items } } = getState();\n  await axios.put(`${API_PATHS.cart}/profile/cart`, { items }, {\n    headers: {\n      Authorization: `Basic ${localStorage.getItem('authorization_token')}`,\n    },\n  })\n};\n\nexport const removeFromCart = (product: Product) => async (dispatch: any, getState: any) => {\n  dispatch(cartSlice.actions.removeFromCart(product));\n  const { cart: { items } } = getState();\n  await axios.put(`${API_PATHS.cart}/profile/cart`, { items }, {\n    headers: {\n      Authorization: `Basic ${localStorage.getItem('authorization_token')}`,\n    },\n  })\n};\n\nexport const clearCart = () => async (dispatch: any, getState: any) => {\n  dispatch(cartSlice.actions.clearCart());\n  const { cart: { items } } = getState();\n  await axios.put(`${API_PATHS.cart}/profile/cart`, { items }, {\n    headers: {\n      Authorization: `Basic ${localStorage.getItem('authorization_token')}`,\n    },\n  })\n};\n\nexport const {updateFromApi} = cartSlice.actions;\n\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.cart.value)`\nexport const selectCartItems = (state: RootState) => state.cart.items;\n\nexport default cartSlice.reducer;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport {Product} from \"models/Product\";\nimport CartIcon from \"@material-ui/icons/ShoppingCart\";\nimport Add from \"@material-ui/icons/Add\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addToCart, selectCartItems, removeFromCart} from \"store/cartSlice\";\n\ntype AddProductToCartProps = {\n  product: Product\n};\n\nexport default function AddProductToCart({product}: AddProductToCartProps) {\n  const dispatch = useDispatch();\n  const cartItems = useSelector(selectCartItems);\n  const cartItem = cartItems.find(i => i.product.id === product.id);\n\n  return (\n    <>\n    {\n      cartItem ?\n        (\n          <>\n            <IconButton onClick={() => dispatch(removeFromCart(product))}>\n              <Remove color={\"secondary\"}/>\n            </IconButton>\n            <Typography align=\"center\">\n              {cartItem.count}\n            </Typography>\n            <IconButton onClick={() => dispatch(addToCart(product))}>\n              <Add color={\"secondary\"}/>\n            </IconButton>\n            </>\n        )\n        :\n        (\n          <IconButton onClick={() => dispatch(addToCart(product))}>\n            <CartIcon color={\"secondary\"}/>\n          </IconButton>\n        )\n    }\n    </>\n  );\n}","import React, {useEffect, useState} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Product} from \"models/Product\";\nimport {formatAsPrice} from \"utils/utils\";\nimport AddProductToCart from \"components/AddProductToCart/AddProductToCart\";\n// import axios from 'axios';\n// import API_PATHS from \"constants/apiPaths\";\nimport productList from \"./productList.json\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nexport default function Products() {\n  const classes = useStyles();\n  const [products, setProducts] = useState<Product[]>([]);\n\n  useEffect(() => {\n    // axios.get(`${API_PATHS.bff}/product/available/`)\n    //   .then(res => setProducts(res.data));\n    setProducts(productList);\n  }, [])\n\n  return (\n    <Grid container spacing={4}>\n      {products.map((product: Product, index: number) => (\n        <Grid item key={product.id} xs={12} sm={6} md={4}>\n          <Card className={classes.card}>\n            <CardMedia\n              className={classes.cardMedia}\n              image={`https://source.unsplash.com/random?sig=${index}`}\n              title=\"Image title\"\n            />\n            <CardContent className={classes.cardContent}>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {product.title}\n              </Typography>\n              <Typography>\n                {formatAsPrice(product.price)}\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <AddProductToCart product={product}/>\n            </CardActions>\n          </Card>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Products from \"components/pages/PageProducts/components/Products\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    padding: theme.spacing(3, 0, 3),\n  },\n}));\n\nexport default function PageProducts() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.content}>\n      <Products/>\n    </div>\n  );\n}\n","import Badge from \"@material-ui/core/Badge\";\nimport CartIcon from \"@material-ui/icons/ShoppingCart\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport React, { useEffect } from \"react\";\nimport axios from 'axios';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectCartItems, updateFromApi } from \"store/cartSlice\";\nimport { Link } from 'react-router-dom';\nimport API_PATHS from \"../../../constants/apiPaths\";\n\nexport default function Cart() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    axios.get(\n        `${API_PATHS.cart}/profile/cart`,\n        {\n          headers: {\n            Authorization: `Basic ${localStorage.getItem('authorization_token')}`\n          }\n        }\n    ).then(({ data: { data: { cart } } }) => {\n      dispatch(updateFromApi(cart))\n    });\n  }, [dispatch]);\n  const cartItems = useSelector(selectCartItems);\n  const badgeContent = cartItems.length || undefined;\n\n  return (\n    <IconButton\n      aria-label=\"show 4 new mails\"\n      color=\"inherit\"\n      component={Link}\n      to=\"/cart\"\n    >\n      <Badge badgeContent={badgeContent} color=\"secondary\">\n        <CartIcon/>\n      </Badge>\n    </IconButton>\n  );\n}\n","import React from 'react';\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport Cart from \"components/MainLayout/components/Cart\";\nimport {Link} from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    homeLink: {\n      color: 'white',\n      textDecoration: 'none'\n    }\n  }),\n);\n\nexport default function Header() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const auth = true;\n\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <AppBar position=\"relative\">\n      <Toolbar>\n        <Typography variant=\"h6\" className={classes.title}>\n          <Link className={classes.homeLink} to=\"/\">My Store!</Link>\n        </Typography>\n\n        {auth && (\n          <div>\n            <IconButton\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              color=\"inherit\"\n            >\n              <AccountCircle/>\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={open}\n              onClose={handleClose}\n            >\n              <MenuItem component={Link} to=\"/admin/orders\" onClick={handleClose}>Manage orders</MenuItem>\n              <MenuItem component={Link} to=\"/admin/products\" onClick={handleClose}>Manage products</MenuItem>\n            </Menu>\n          </div>\n        )}\n        <Cart/>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Container from \"@material-ui/core/Container\";\nimport Header from \"components/MainLayout/components/Header\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        My Store\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingBottom: theme.spacing(8),\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nconst MainLayout: React.FC = ({children}) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Header/>\n      <main>\n        <Container className={classes.container} maxWidth=\"md\">\n          {children!}\n        </Container>\n      </main>\n      <footer className={classes.footer}>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          Thank you for your purchase!\n        </Typography>\n        <Copyright/>\n      </footer>\n    </>\n  );\n};\n\nexport default MainLayout;","import * as Yup from 'yup';\n\nexport type Product = {\n  id: string,\n  title: string,\n  description: string,\n  price: number,\n};\n\nexport const ProductSchema = Yup.object().shape({\n  title: Yup.string().required(),\n  description: Yup.string(),\n  price: Yup.number().required(),\n});\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n}));\n\nconst PaperLayout:React.FC = ({children}) =>  {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.layout}>\n      <Paper className={classes.paper}>\n        {children}\n      </Paper>\n    </div>\n  );\n};\n\nexport default PaperLayout;","import React, {useEffect, useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport {Product, ProductSchema} from \"models/Product\";\nimport {Formik, Field, FormikProps, FormikValues} from 'formik';\nimport {TextField} from 'formik-material-ui';\nimport axios from 'axios';\nimport {useHistory, useParams} from 'react-router-dom';\nimport PaperLayout from \"components/PaperLayout/PaperLayout\";\nimport Typography from \"@material-ui/core/Typography\";\nimport API_PATHS from \"constants/apiPaths\";\n\nconst Form = (props: FormikProps<FormikValues>) => {\n  const {\n    // values,\n    // touched,\n    // errors,\n    dirty,\n    isSubmitting,\n    isValid,\n    // handleChange,\n    // handleBlur,\n    handleSubmit,\n    // handleReset,\n    // setFieldValue,\n    // isEditMode,\n    // onCancel,\n    // isButtonContact,\n    // setTouched,\n    // isButtonAddAndRedirect,\n    // setShouldRedirect,\n    // submitForm,\n    // onGetCitizen,\n    // shouldConfirmLeave,\n  } = props;\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Field\n            component={TextField}\n            name=\"title\"\n            label=\"Title\"\n            fullWidth\n            autoComplete=\"off\"\n            required\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Field\n            component={TextField}\n            name=\"description\"\n            label=\"Description\"\n            fullWidth\n            autoComplete=\"off\"\n            multiline\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <Field\n            component={TextField}\n            name=\"price\"\n            label=\"Price ($)\"\n            fullWidth\n            autoComplete=\"off\"\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <Field\n            component={TextField}\n            name=\"count\"\n            label=\"Count\"\n            fullWidth\n            autoComplete=\"off\"\n            required\n          />\n        </Grid>\n        <Grid item container xs={12} justify=\"space-between\">\n          <Button\n            color=\"primary\"\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!dirty || isSubmitting || !isValid}\n          >\n            Save Product\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\nconst emptyValues: any = ProductSchema.cast();\n\nexport default function PageProductForm() {\n  const history = useHistory();\n  const {id} = useParams<{ id: string }>();\n  const [product, setProduct] = useState<Product | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  const onSubmit = (values: FormikValues) => {\n    const formattedValues = ProductSchema.cast(values);\n    const productToSave = id ? {...ProductSchema.cast(formattedValues), id} : formattedValues;\n    axios.put(`${API_PATHS.bff}/product`, productToSave)\n      .then(() => history.push('/admin/products'));\n  };\n\n  useEffect(() => {\n    if (!id) {\n      setIsLoading(false);\n      return;\n    }\n    axios.get(`${API_PATHS.bff}/product/${id}`)\n      .then(res => {\n        setProduct(res.data);\n        setIsLoading(false);\n      });\n  }, [id])\n\n  if (isLoading) return <p>loading...</p>;\n\n  return (\n    <PaperLayout>\n      <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n        {id ? 'Edit product' : 'Create new product'}\n      </Typography>\n      <Formik\n        initialValues={product || emptyValues}\n        validationSchema={ProductSchema}\n        onSubmit={onSubmit}\n      >\n        {(props: FormikProps<FormikValues>) => <Form {...props} />}\n      </Formik>\n    </PaperLayout>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {CartItem} from \"models/CartItem\";\nimport {formatAsPrice} from \"utils/utils\";\nimport AddProductToCart from \"components/AddProductToCart/AddProductToCart\";\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    padding: theme.spacing(1, 0),\n  },\n  total: {\n    fontWeight: 700,\n  },\n  title: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\ntype CartItemsProps = {\n  items: CartItem[],\n  isEditable: boolean\n};\n\nexport default function CartItems({items, isEditable}: CartItemsProps) {\n  const classes = useStyles();\n\n  const totalPrice: number = items.reduce((total, item) => (item.count * item.product.price + total), 0);\n\n  return (\n    <>\n      <List disablePadding>\n        {items.map((cartItem: CartItem) => (\n          <ListItem className={classes.listItem} key={cartItem.product.id}>\n            {isEditable && <AddProductToCart product={cartItem.product}/>}\n            <ListItemText primary={cartItem.product.title} secondary={cartItem.product.description}/>\n            <Typography\n              variant=\"body2\">{formatAsPrice(cartItem.product.price)} x {cartItem.count} = {formatAsPrice(cartItem.product.price * cartItem.count)}</Typography>\n          </ListItem>\n        ))}\n        <ListItem className={classes.listItem}>\n          <ListItemText primary=\"Shipping\"/>\n          <Typography\n            variant=\"body2\">Free</Typography>\n        </ListItem>\n        <ListItem className={classes.listItem}>\n          <ListItemText primary=\"Total\"/>\n          <Typography variant=\"subtitle1\" className={classes.total}>\n            {formatAsPrice(totalPrice)}\n          </Typography>\n        </ListItem>\n      </List>\n    </>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport CartItems from \"components/CartItems/CartItems\";\nimport {useSelector} from \"react-redux\";\nimport {selectCartItems} from \"store/cartSlice\";\n\nexport default function ReviewCart() {\n  const cartItems = useSelector(selectCartItems);\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Order summary\n      </Typography>\n      <CartItems items={cartItems} isEditable/>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport CartItems from \"components/CartItems/CartItems\";\nimport {FormikValues} from \"formik\";\nimport {CartItem} from \"models/CartItem\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\ntype ReviewOrderProps = {\n  address: FormikValues,\n  items: CartItem[]\n};\n\nexport default function ReviewOrder({address, items}:ReviewOrderProps) {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Order summary\n      </Typography>\n      <CartItems items={items} isEditable={false}/>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\n            Shipping\n          </Typography>\n          <Typography gutterBottom>{address.firstName} {address.lastName}</Typography>\n          <Typography gutterBottom>{address.address}</Typography>\n        </Grid>\n        <Grid item container direction=\"column\" xs={12} sm={6}>\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\n            Comment\n          </Typography>\n          <Typography gutterBottom>{address.comment}</Typography>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}","import * as Yup from 'yup';\n\nexport const AddressSchema = Yup.object({\n  firstName: Yup.string().required(),\n  lastName: Yup.string().required(),\n  address: Yup.string().required(),\n  comment: Yup.string().default(''),\n}).defined();\n\nexport type Address = Yup.InferType<typeof AddressSchema>;\n\n\nexport const OrderItemSchema = Yup.object({\n  productId: Yup.string().required(),\n  count: Yup.number().integer().positive().required()\n}).defined();\n\nexport type OrderItem = Yup.InferType<typeof OrderItemSchema>;\n\n\nexport const OrderSchema = Yup.object({\n  id: Yup.string().required(),\n  items: Yup.array().of(OrderItemSchema),\n  address: AddressSchema,\n  status: Yup.string().required(),\n}).defined();\n\nexport type Order = Yup.InferType<typeof OrderSchema>;\n","import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ReviewCart from 'components/pages/PageCart/components/ReviewCart';\nimport ReviewOrder from 'components/pages/PageCart/components/ReviewOrder';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectCartItems, clearCart} from \"store/cartSlice\";\nimport PaperLayout from \"components/PaperLayout/PaperLayout\";\nimport {Formik, Form, FormikProps, FormikValues, FastField} from \"formik\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {TextField} from 'formik-material-ui';\nimport axios from \"axios\";\nimport API_PATHS from \"constants/apiPaths\";\nimport {AddressSchema, OrderSchema} from \"models/Order\";\n\nconst useStyles = makeStyles((theme) => ({\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst steps = ['Review your cart', 'Shipping address', 'Review your order'];\n\nconst initialAddressValues: any = AddressSchema.cast();\n\nconst CartIsEmpty = () => (\n  <Typography variant=\"h6\" gutterBottom>\n    The cart is empty. Didn't you like anything in our shop?\n  </Typography>\n);\n\nconst Success = () => (\n  <React.Fragment>\n    <Typography variant=\"h5\" gutterBottom>\n      Thank you for your order.\n    </Typography>\n    <Typography variant=\"subtitle1\">\n      Your order is placed. Our manager will call you soon to clarify the details.\n    </Typography>\n  </React.Fragment>\n);\n\nconst renderForm = () => (\n  <>\n    <Typography variant=\"h6\" gutterBottom>\n      Shipping address\n    </Typography>\n    <Grid container spacing={2}>\n      <Grid item xs={12} sm={6}>\n        <FastField\n          component={TextField}\n          name=\"lastName\"\n          label=\"Last Name\"\n          fullWidth\n          autoComplete=\"off\"\n          required\n        />\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <FastField\n          component={TextField}\n          name=\"firstName\"\n          label=\"First Name\"\n          fullWidth\n          autoComplete=\"off\"\n          required\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <FastField\n          component={TextField}\n          name=\"address\"\n          label=\"Shipping address\"\n          fullWidth\n          autoComplete=\"off\"\n          multiline\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <FastField\n          component={TextField}\n          name=\"comment\"\n          label=\"Comment\"\n          fullWidth\n          autoComplete=\"off\"\n          multiline\n        />\n      </Grid>\n    </Grid>\n  </>\n);\n\nexport default function PageCart() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState<number>(0);\n  const cartItems = useSelector(selectCartItems);\n  const isCartEmpty = !cartItems.length;\n  const [address, setAddress] = useState<FormikValues>(initialAddressValues);\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const dispatch = useDispatch();\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n    if (activeStep === 2) {\n      const formattedValues = OrderSchema.cast({\n        items: cartItems.map(i => ({productId: i.product.id, count: i.count})),\n        address\n      });\n      axios.put(`${API_PATHS.order}/order`, formattedValues)\n        .then(() => {\n          dispatch(clearCart());\n          setActiveStep(activeStep + 1);\n        });\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return (\n    <PaperLayout>\n      <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n        Checkout\n      </Typography>\n      <Stepper activeStep={activeStep} className={classes.stepper}>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <React.Fragment>\n        <Formik\n          enableReinitialize={false}\n          initialValues={initialAddressValues}\n          validationSchema={AddressSchema}\n          isInitialValid={false}\n          onSubmit={() => undefined}\n        >\n          {(props: FormikProps<FormikValues>) => {\n            const {values, isValid} = props;\n            setAddress(values);\n            setIsFormValid(isValid);\n            return (\n              <Form>\n                {isCartEmpty && activeStep === 0 && <CartIsEmpty/>}\n                {activeStep === 0 && !isCartEmpty && <ReviewCart/>}\n                {activeStep === 1 && renderForm()}\n                {activeStep === 2 && <ReviewOrder address={address} items={cartItems}/>}\n                {activeStep === 3 && <Success/>}\n              </Form>\n            )\n          }}\n        </Formik>\n\n        {activeStep <= 2 && <div className={classes.buttons}>\n          {activeStep !== 0 && (\n            <Button onClick={handleBack} className={classes.button}>\n              Back\n            </Button>\n          )}\n          {!isCartEmpty && (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleNext}\n              className={classes.button}\n              disabled={activeStep === 1 && !isFormValid}\n            >\n              {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\n            </Button>)}\n        </div>}\n      </React.Fragment>\n    </PaperLayout>\n  );\n}","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nimport API_PATHS from \"constants/apiPaths\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from \"@material-ui/core/Button\";\n\nexport default function Orders() {\n  const [orders, setOrders] = useState<any>([]);\n\n  useEffect(() => {\n    axios.get(`${API_PATHS.order}/order`)\n      .then(res => setOrders(res.data));\n  }, []);\n\n  const onDelete = (id: string) => {\n    axios.delete(`${API_PATHS.order}/order/${id}`)\n      .then(() => {\n        axios.get(`${API_PATHS.order}/order`)\n          .then(res => setOrders(res.data));\n        }\n      );\n  };\n\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>From</TableCell>\n            <TableCell align=\"right\">Items count</TableCell>\n            <TableCell align=\"right\">Address</TableCell>\n            <TableCell align=\"right\">Status</TableCell>\n            <TableCell align=\"right\">Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {orders.map((order: any) => (\n            <TableRow key={order.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {order.address?.firstName} {order.address?.lastName}\n              </TableCell>\n              <TableCell align=\"right\">{order.items.length}</TableCell>\n              <TableCell align=\"right\">{order.address?.address}</TableCell>\n              <TableCell align=\"right\">{order.statusHistory[order.statusHistory.length-1].status.toUpperCase()}</TableCell>\n              <TableCell align=\"right\">\n                <Button size=\"small\" color=\"primary\" component={Link} to={`/admin/order/${order.id}`}>\n                  Manage\n                </Button>\n                <Button size=\"small\" color=\"secondary\" onClick={() => onDelete(order.id)}>\n                  Delete\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Orders from \"components/pages/PageOrders/components/Orders\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    padding: theme.spacing(3, 0, 3),\n  },\n}));\n\nexport default function PageOrders() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.content}>\n      <Typography variant=\"h6\" gutterBottom>\n        Manage orders\n      </Typography>\n      <Orders/>\n    </div>\n  );\n}\n","export const ORDER_STATUS = {\n  open: 'open',\n  approved: 'approved',\n  confirmed: 'confirmed',\n  sent: 'sent',\n  completed: 'completed',\n  cancelled: 'cancelled',\n};\n\nexport const ORDER_STATUS_FLOW = [\n  ORDER_STATUS.open,\n  ORDER_STATUS.approved,\n  ORDER_STATUS.confirmed,\n  ORDER_STATUS.sent,\n  ORDER_STATUS.completed,\n  ORDER_STATUS.cancelled,\n];\n","import React, {useEffect, useState} from 'react';\nimport {OrderItem} from \"models/Order\";\nimport axios from 'axios';\nimport {useParams} from 'react-router-dom';\nimport PaperLayout from \"components/PaperLayout/PaperLayout\";\nimport Typography from \"@material-ui/core/Typography\";\nimport API_PATHS from \"constants/apiPaths\";\nimport {CartItem} from \"models/CartItem\";\nimport {Product} from \"models/Product\";\nimport ReviewOrder from \"components/pages/PageCart/components/ReviewOrder\";\nimport {ORDER_STATUS, ORDER_STATUS_FLOW} from \"constants/order\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {Field, Formik, FormikProps, FormikValues} from \"formik\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {TextField} from \"formik-material-ui\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\n\nconst Form = (props: FormikProps<FormikValues>) => {\n  const {\n    values,\n    // touched,\n    // errors,\n    dirty,\n    isSubmitting,\n    isValid,\n    // handleChange,\n    // handleBlur,\n    handleSubmit,\n    // handleReset,\n    // setFieldValue,\n    // isEditMode,\n    // onCancel,\n    // isButtonContact,\n    // setTouched,\n    // isButtonAddAndRedirect,\n    // setShouldRedirect,\n    // submitForm,\n    // onGetCitizen,\n    // shouldConfirmLeave,\n  } = props;\n  let helperText = '';\n  if ((values.status) === ORDER_STATUS.approved) {\n    helperText = 'Setting status to APPROVED will decrease products count from stock!!!';\n  }\n  // TODO add check if status was changed from approved to cancelled\n  //  to increase product count back again\n  // if ((values.status) === ORDER_STATUS.cancelled) {\n  //   helperText = 'Setting status to CANCELLED will increase products count in stock!!!';\n  // }\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Field\n            component={TextField}\n            name=\"status\"\n            label=\"Status\"\n            select\n            fullWidth\n            helperText={helperText}\n          >\n            {ORDER_STATUS_FLOW.map((status,index) => (\n              <MenuItem key={index} value={status}>\n                {status}\n              </MenuItem>\n            ))}\n          </Field>\n        </Grid>\n        <Grid item xs={12}>\n          <Field\n            component={TextField}\n            name=\"comment\"\n            label=\"Comment\"\n            fullWidth\n            autoComplete=\"off\"\n            multiline\n          />\n        </Grid>\n        <Grid item container xs={12} justify=\"space-between\">\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!dirty || isSubmitting || !isValid}\n          >\n            Change status\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n\nexport default function PageOrder() {\n  const {id} = useParams<{ id: string }>();\n  const [order, setOrder] = useState<any>({});\n  const [cartItems, setCartItems] = useState<CartItem[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  const onChangeStatus = (values: FormikValues) => {\n    return axios.put(`${API_PATHS.order}/order/${order.id}/status`, values)\n      .then(({data}) => setOrder(data));\n  };\n\n  useEffect(() => {\n    if (!id) {\n      setIsLoading(false);\n      return;\n    }\n    const promises: any[] = [\n      axios.get(`${API_PATHS.product}/product`),\n      axios.get(`${API_PATHS.order}/order/${id}`)\n    ];\n    Promise.all(promises)\n      .then(([{data: products}, {data: order}]) => {\n        const cartItems: CartItem[] = order.items.map((i: OrderItem) => ({\n          product: products.find((p: Product) => p.id === i.productId),\n          count: i.count\n        }));\n        setOrder(order);\n        setCartItems(cartItems);\n        setIsLoading(false);\n      });\n  }, [id])\n\n  if (isLoading) return <p>loading...</p>;\n\n  const statusHistory = order.statusHistory || [];\n\n  const lastStatusItem = statusHistory[statusHistory.length - 1];\n\n  return (\n    <PaperLayout>\n      <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n        Manage order\n      </Typography>\n      <ReviewOrder address={order.address} items={cartItems}/>\n      <Typography variant=\"h6\">\n        Status:\n      </Typography>\n      <Typography variant=\"h6\" color=\"primary\">\n        {lastStatusItem?.status.toUpperCase()}\n      </Typography>\n      <Typography variant=\"h6\">\n        Change status:\n      </Typography>\n      <Formik\n        initialValues={{status: lastStatusItem.status, comment: ''}}\n        enableReinitialize\n        onSubmit={onChangeStatus}\n      >\n        {(props: FormikProps<FormikValues>) => <Form {...props} />}\n      </Formik>\n      <Typography variant=\"h6\">\n        Status history:\n      </Typography>\n      <TableContainer>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Status</TableCell>\n              <TableCell align=\"right\">Date and Time</TableCell>\n              <TableCell align=\"right\">Comment</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {statusHistory.map((statusHistoryItem: any) => (\n              <TableRow key={order.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {statusHistoryItem.status.toUpperCase()}\n                </TableCell>\n                <TableCell align=\"right\">{(new Date(statusHistoryItem.timestamp)).toString()}</TableCell>\n                <TableCell align=\"right\">{statusHistoryItem.comment}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </PaperLayout>\n  );\n}\n","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\nimport API_PATHS from \"constants/apiPaths\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from \"@material-ui/core/Button\";\nimport {formatAsPrice} from \"utils/utils\";\n\nexport default function ProductsTable() {\n  const [products, setProducts] = useState<any>([]);\n\n  useEffect(() => {\n    axios.get(`${API_PATHS.bff}/product`)\n      .then(res => setProducts(res.data));\n  }, []);\n\n  const onDelete = (id: string) => {\n    axios.delete(`${API_PATHS.bff}/product/${id}`)\n      .then(() => {\n        axios.get(`${API_PATHS.bff}/product`)\n          .then(res => setProducts(res.data));\n        }\n      );\n  };\n\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Title</TableCell>\n            <TableCell align=\"right\">Description</TableCell>\n            <TableCell align=\"right\">Price</TableCell>\n            <TableCell align=\"right\">Count</TableCell>\n            <TableCell align=\"right\">Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {products.map((product: any) => (\n            <TableRow key={product.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {product.title}\n              </TableCell>\n              <TableCell align=\"right\">{product.description}</TableCell>\n              <TableCell align=\"right\">{formatAsPrice(product.price)}</TableCell>\n              <TableCell align=\"right\">{product.count}</TableCell>\n              <TableCell align=\"right\">\n                <Button size=\"small\" color=\"primary\" component={Link} to={`/admin/product-form/${product.id}`}>\n                  Manage\n                </Button>\n                <Button size=\"small\" color=\"secondary\" onClick={() => onDelete(product.id)}>\n                  Delete\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    padding: theme.spacing(3, 0, 3),\n  },\n}));\n\ntype CSVFileImportProps = {\n  url: string,\n  title: string\n};\n\nexport default function CSVFileImport({url, title}: CSVFileImportProps) {\n  const classes = useStyles();\n  const [file, setFile] = useState<any>();\n\n  const onFileChange = (e: any) => {\n    console.log(e);\n    let files = e.target.files || e.dataTransfer.files\n    if (!files.length) return\n    setFile(files.item(0));\n  };\n\n  const removeFile = () => {\n    setFile('');\n  };\n\n  const uploadFile = async (e: any) => {\n      // Get the presigned URL\n      const response = await axios({\n        method: 'GET',\n        url,\n        params: {\n          name: encodeURIComponent(file.name)\n        }\n      })\n      console.log('File to upload: ', file.name)\n      console.log('Uploading to: ', response.data)\n      const result = await fetch(response.data, {\n        method: 'PUT',\n        body: file\n      })\n      console.log('Result: ', result)\n      setFile('');\n    }\n  ;\n\n  return (\n    <div className={classes.content}>\n      <Typography variant=\"h6\" gutterBottom>\n        {title}\n      </Typography>\n      {!file ? (\n          <input type=\"file\" onChange={onFileChange}/>\n      ) : (\n        <div>\n          <button onClick={removeFile}>Remove file</button>\n          <button onClick={uploadFile}>Upload file</button>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport API_PATHS from \"constants/apiPaths\";\nimport ProductsTable from \"components/pages/admin/PageProductImport/components/ProductsTable\";\nimport CSVFileImport from \"components/pages/admin/PageProductImport/components/CSVFileImport\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    padding: theme.spacing(3, 0, 3),\n  },\n}));\n\nexport default function PageProductImport() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.content}>\n      <Box display=\"flex\" alignItems=\"center\">\n        <CSVFileImport url={`${API_PATHS.import}/import`} title=\"Import Products CSV\"/>\n        <Button size=\"small\" color=\"primary\" variant=\"contained\" component={Link} to={'/admin/product-form/'}>\n          create product\n        </Button>\n      </Box>\n      <ProductsTable/>\n    </div>\n  );\n}\n","import React from 'react';\nimport 'components/App/App.css';\nimport PageProducts from \"components/pages/PageProducts/PageProducts\";\nimport MainLayout from \"components/MainLayout/MainLayout\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport PageProductForm from \"components/pages/PageProductForm/PageProductForm\";\nimport PageCart from \"components/pages/PageCart/PageCart\";\nimport PageOrders from \"components/pages/PageOrders/PageOrders\";\nimport PageOrder from \"components/pages/PageOrder/PageOrder\";\nimport PageProductImport from \"components/pages/admin/PageProductImport/PageProductImport\";\n\nfunction App() {\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\">\n          <MainLayout>\n            <Route exact path=\"/\">\n              <PageProducts/>\n            </Route>\n            <Route exact path={[\"/admin/product-form/:id\", '/admin/product-form']}>\n              <PageProductForm/>\n            </Route>\n            <Route exact path=\"/cart\">\n              <PageCart />\n            </Route>\n            <Route exact path=\"/admin/orders\">\n              <PageOrders />\n            </Route>\n            <Route exact path=\"/admin/order/:id\">\n              <PageOrder />\n            </Route>\n            <Route exact path=\"/admin/products\">\n              <PageProductImport />\n            </Route>\n          </MainLayout>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk, RootState } from 'store/store';\n\ninterface CounterState {\n  value: number;\n}\n\nconst initialState: CounterState = {\n  value: 0,\n};\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: state => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: state => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\nexport const incrementAsync = (amount: number): AppThunk => dispatch => {\n  setTimeout(() => {\n    dispatch(incrementByAmount(amount));\n  }, 1000);\n};\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\nexport default counterSlice.reducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport counterReducer from 'store/counterSlice';\nimport cartReducer from 'store/cartSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    cart: cartReducer\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport App from 'components/App/App';\nimport {store} from 'store/store';\nimport {Provider} from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport axios from 'axios';\n\naxios.interceptors.response.use(\n  response => {\n    return response;\n  },\n  function(error) {\n    if (error?.response?.status === 400) {\n      alert(error.response.data?.data);\n    }\n\n    return Promise.reject(error?.response ?? error);\n  }\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <CssBaseline/>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}